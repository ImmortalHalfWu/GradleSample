apply plugin: 'com.android.library'
apply from:rootDir.getAbsolutePath() + '/util.gradle'


android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    testCompile 'junit:junit:4.12'
}

//限定只打release包
project.afterEvaluate {
    closeAllDebugBuild()
}

//assemble之后将release包复制到指定目录
tasks.getByName('assemble').doLast {
    println "$project.name: -----------------After assemble, jar libs are copied tolocal repository"
    getBuildDir().getAbsolutePath()+'\\outputs\\aar\\lib_one-release.aar'

    copyFileTo(getBuildDir().getAbsolutePath()+'\\outputs\\aar\\lib_one-release.aar',rootProject.getChildProjects().get('app').getProjectDir().absolutePath+'\\libs'+'\\lib_one-release-'+android.defaultConfig.versionName+'.aar')
}

//copyFileTo(getBuildDir().getAbsolutePath()+'\\outputs\\aar\\lib_one-release.aar',project.getProjectDir().getAbsolutePath()+'\\lib_one-release.aar')

//deleteFile(getBuildDir().getAbsolutePath()+'\\outputs\\aar')
